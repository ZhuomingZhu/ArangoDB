Example 1:
SPARQL:
SELECT DISTINCT * WHERE {
  ?s ?p ?o
}
LIMIT 10

AQL:
FOR subject IN subjects 
   For link in links
    FILTER subject._id == link._from
        for object in subjects
            filter object._id == link._to
    limit 10
    RETURN concat (subject.subject_name, link.link_value ,object.subject_name)
    
______________________________________________________
Example 2:
SPARQL:
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?subject ?label
WHERE { ?subject drugbank:drugCategory ?label . 
 FILTER regex(str(?label), "anti")
} LIMIT 100

AQL:
FOR subject IN subjects
    FOR name IN ATTRIBUTES(subject)
      FILTER LIKE(name, 'chemicalFormula')
      filter like(subject[name], 'C19%')
      limit 100
      RETURN concat(
      subject.subject_name," ",subject[name])

//for future use:
FOR subject IN subjects
  LET result = (
    FOR name IN ATTRIBUTES(subject)
      FILTER LIKE(name, '%chemical%')
      RETURN {
        name: name,
        value1: subject.subject_name
      }
  )
  limit 5
  RETURN concat(result[*].name, result[*].value1)
  RETURN zip(result[*].value1, result[*].name)

FOR subject IN subjects
  LET attributes = (
    FOR name IN ATTRIBUTES(subject)
      FILTER LIKE(subject[name], '%anti%')
      RETURN {
        name: name,
        value: subject[name]
      }
  )
limit 5
RETURN ZIP(attributes[*].name, attributes[*].value)

FOR subject IN subjects
  LET attributes = (
    FOR name IN ATTRIBUTES(subject)
      FILTER LIKE(subject[name], '%anti%')
      RETURN {
        name: subject.subject_name,
        value: name
      }
  )
limit 25
RETURN ZIP(attributes[*].name, attributes[*].value)

__________________________________________________________
Example 3:
SPARQL:
SELECT DISTINCT ?property ?hasValue ?isValueOf
WHERE {
  { <http://wifo5-04.informatik.uni-mannheim.de/drugbank/resource/drugs/DB00001> ?property ?hasValue }
  UNION
  { ?isValueOf ?property <http://wifo5-04.informatik.uni-mannheim.de/drugbank/resource/drugs/DB00001> }
}
ORDER BY (!BOUND(?hasValue)) ?property ?hasValue ?isValueOf

AQL:
FOR subject IN subjects
    FOR name IN ATTRIBUTES(subject)
      FILTER subject.subject_name == "http://www4.wiwiss.fu-berlin.de/drugbank/resource/drugs/DB00393"
      SORT name
      RETURN concat(
      name,": ",subject[name])
      
      
