Example 1:
SPARQL:
SELECT DISTINCT * WHERE {
  ?s ?p ?o
}
LIMIT 10

AQL:
FOR subject IN subjects 
   For link in links
    FILTER subject._id == link._from
        for object in subjects
            filter object._id == link._to
    limit 10
    RETURN distinct concat (subject.subject_name, link.link_value ,object.subject_name)
    
______________________________________________________
Example 2:
SPARQL:
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?subject ?label
WHERE { ?subject drugbank:drugCategory ?label . 
 FILTER regex(str(?label), "anti")
} LIMIT 100

AQL:

For subject in subjects	
    FOR link IN links
        FOR name IN ATTRIBUTES(link)
        	FILTER LIKE(name, 'link_value')
        	FILTER LIKE(link[name], '%anti%')
        	FILTER link._from == subject._id
LIMIT 100
RETURN CONCAT(subject.subject_name," ",link[name])

__________________________________________________________
Example 3:
SPARQL:
SELECT DISTINCT ?property ?hasValue ?isValueOf
WHERE {
  { <http://wifo5-04.informatik.uni-mannheim.de/drugbank/resource/drugs/DB00001> ?property ?hasValue }
  UNION
  { ?isValueOf ?property <http://wifo5-04.informatik.uni-mannheim.de/drugbank/resource/drugs/DB00001> }
}
ORDER BY (!BOUND(?hasValue)) ?property ?hasValue ?isValueOf

AQL:
let a =(
FOR subject IN subjects
 FILTER subject.subject_name == "http://www4.wiwiss.fu-berlin.de/drugbank/resource/drugs/DB00393"
  FOR name IN ATTRIBUTES(subject)
   FILTER name != "_key" AND name != "_id" AND name != "_rev" 
RETURN CONCAT (name, " : ", subject[name])
)
 
let b=(
FOR subject IN subjects
 FILTER subject.subject_name == "http://www4.wiwiss.fu-berlin.de/drugbank/resource/drugs/DB00393"
  FOR link IN links
   FILTER link._from == subject._id
    FOR name IN ATTRIBUTES(link)
     FILTER name != "_key" AND name != "_from" AND name != "_to" AND name != "_id" AND name != "_rev"
RETURN CONCAT (name, " : ", link[name])
      )
     
RETURN {attribute:a, link:b}


      
